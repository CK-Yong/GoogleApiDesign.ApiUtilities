name: build-and-test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: 
    branches: [ main, dotnet-pack ]

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Docker Setup Buildx
      uses: docker/setup-buildx-action@v1.6.0
      
    - name: Build Docker Image
      uses: docker/build-push-action@v2.9.0
      with:
        file: .github/workflows/build.Dockerfile
        target: dotnet-build
        tags: gaip-net/build:latest
        outputs: type=docker,dest=/tmp/gaip-net-build.tar   
    
    - name: Run tests
      uses: docker/build-push-action@v2.9.0
      with:
        file: .github/workflows/build.Dockerfile
        target: dotnet-test
        tags: test-results:latest
        load: true
        
    - name: Copy test results
      run: |
        id=$(docker create test-results)
        docker cp $id:/work/testresults ${{ github.workspace }}/testresults
          
    - name: Upload build image
      uses: actions/upload-artifact@v2
      with:
        name: gaip-net-build
        path: /tmp/gaip-net-build.tar
      
    - name: Upload dotnet test results
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: ${{ github.workspace }}/testresults
      if: ${{ always() }}
      
  deploy:
    name: Create and deploy packages
    runs-on: ubuntu-latest
    needs: [ build ]
    if: github.event_name != 'pull_request'
    steps:
      - name: Checkout build artifacts
        uses: actions/download-artifact@v3.0.0
        with:
          name: gaip-net-build
          path: /tmp

      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v1.6.0

      - name: Load Docker image
        run: |
          docker load --input /tmp/gaip-net-build.tar

      - name: Create and Push packages
        uses: docker/build-push-action@v2.9.0
        with:
          file: .github/workflows/build.Dockerfile
          target: dotnet-push
          tags: gaip-net/packages:latest
          build-args: Version=0.0.1-alpha,NugetPat={{ secrets.NUGET_PAT }} # For now, hardcode the version